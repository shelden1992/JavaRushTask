package com.javarush.task.task23.task2310;

/* 
Напряги извилины!
*/
public class Solution {
    private String name;

    Solution(String name) {
        this.name = name;
    }

    public String getName() {
        return name;
    }

    private void sout() {
        new Solution("sout") {
            void printName() {
                System.out.println(  getName());
            }
        }.printName();
    }

    public static void main(String[] args) {
        new Solution("main").sout();
    }
}
//У вас два объекта:
//1) Solution("Main   private", "Main   public")
//2) Наследник класса Solution - Solution("Anonim private", "Anonim public").
//
//Эти два объекта связаны как "внешний класс (1) - внутренний класс (2)". Внутренний объект видит все методы (включая приватные) внешнего объекта.
//
//Кроме этого, есть связь родитель-наследник, но надо понимать, что эта связь работает между классами, но не между объектами. Т.е. объект-наследник (2), обращаясь к родительскому методу, обращается к своим собственным полям (где написано "Anonim"). При этом наследник не может обращаться напрямую к собственному приватному методу getPrivate(), т.к. приватный метод описан в родительском классе. Но наследник отлично видит собственный метод getPublic(), унаследованный от родительского класса.
//
//Строка 15: Второй объект не видит собственного приватного метода, но видит приватный метод внешнего (первого) объекта (т.к. работает связь внешний-внутренний).
//16: Второй объект обращается к собственному приватному методу, которого не видит.
//17: С помощью super второй объект все-таки получает доступ к собственному приватному методу.
//18: Явное обращение к методу внешнего (первого) объекта.
//22-24: Внутренний (второй) объект обращается к собственному методу тремя разными способами.
//25: Явное обращение к методу внешнего (первого) объекта.